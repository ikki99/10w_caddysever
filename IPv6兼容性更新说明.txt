=================================================================
           Caddy Manager - IPv4/IPv6 兼容性更新
=================================================================

更新日期：2025-01-09
版本：v0.0.12-ipv6fix

=================================================================
                       重要更新
=================================================================

🎉 **新功能：IPv4/IPv6 代理连接方式选择**

您发现的问题：
  错误日志：dial tcp [::1]:6481: connectex: No connection...
  原因：Caddy 使用 IPv6，但应用只监听 IPv4
  结果：502 Bad Gateway

现在已完全解决！

=================================================================
                    核心问题分析
=================================================================

**问题根源：**

1. Caddy 使用 `localhost` 时：
   - Windows 可能优先解析为 IPv6 地址 [::1]
   - Caddy 尝试连接 [::1]:端口

2. 大多数应用程序：
   - Go/Node.js/Python 默认只监听 IPv4（127.0.0.1）
   - IPv6 连接被拒绝

3. 导致结果：
   - 502 Bad Gateway 错误
   - SSL 证书申请成功但无法访问

=================================================================
                      新增功能
=================================================================

✅ **代理连接方式选择**

位置：新建/编辑项目 → 步骤3（域名和SSL）→ 代理连接方式

选项：
  [√] IPv4 (127.0.0.1) - 推荐 ⭐
      强制使用 IPv4 连接
      避免兼容性问题
      适用于 99% 的应用

  [ ] localhost (可能IPv6)
      让系统自动选择
      仅在明确支持 IPv6 时使用

✅ **自动数据库迁移**
  - 自动为旧项目添加 IPv4 支持
  - 默认启用 IPv4 模式
  - 无需手动配置

✅ **智能 Caddyfile 生成**
  - IPv4 模式：reverse_proxy 127.0.0.1:端口
  - localhost 模式：reverse_proxy localhost:端口

=================================================================
                    使用指南
=================================================================

【新建项目】
  1. 按正常流程创建项目
  2. 在步骤3看到"代理连接方式"
  3. 默认已选择"IPv4" - 无需修改
  4. 继续完成配置

【修复现有项目（502错误）】
  1. 点击项目的"编辑"按钮
  2. 进入步骤3
  3. 将"代理连接方式"改为"IPv4"
  4. 点击"保存修改"
  5. Caddy 自动重新加载配置
  6. 刷新网页，502 错误应该消失

【检查应用监听地址】
  打开 PowerShell 运行：
  netstat -ano | findstr ":您的端口"

  输出含义：
  - 127.0.0.1:端口   →  仅IPv4（选择IPv4）
  - [::]:端口        →  双栈（两者都可以）
  - [::1]:端口       →  仅IPv6（选择localhost）

=================================================================
                  Caddyfile 配置对比
=================================================================

【IPv4 模式（推荐）】
c808.333.606.f89f.top {
    reverse_proxy 127.0.0.1:6481
}

优点：
  ✓ 强制 IPv4 连接
  ✓ 避免 IPv6 问题
  ✓ 兼容性最好

【localhost 模式】
c808.333.606.f89f.top {
    reverse_proxy localhost:6481
}

风险：
  ⚠ 可能解析为 IPv6
  ⚠ 导致连接失败
  ⚠ 出现 502 错误

=================================================================
                    立即修复步骤
=================================================================

如果您的项目目前出现 502 错误：

步骤 1：启动新版本
  双击运行：caddy-manager-console.exe（调试）
  或：右键 caddy-manager.exe → 以管理员身份运行

步骤 2：登录系统
  访问：http://localhost:8989
  使用现有账号登录

步骤 3：修复项目
  a. 点击项目的"编辑"按钮
  b. 导航到"步骤3 - 域名和SSL配置"
  c. 找到"代理连接方式 ⭐ 重要"
  d. 选择"IPv4 (127.0.0.1) - 推荐"
  e. 点击底部的"保存修改"

步骤 4：验证修复
  a. 等待 Caddy 重新加载（约2秒）
  b. 访问您的域名：https://c808.333.606.f89f.top/
  c. 502 错误应该消失
  d. 网站正常显示

步骤 5：检查日志
  管理界面 → 日志
  不应再看到 IPv6 连接错误

=================================================================
                    技术细节
=================================================================

【数据库变更】
  新增字段：use_ipv4 BOOLEAN DEFAULT 1
  
  自动迁移：
    ALTER TABLE projects ADD COLUMN use_ipv4 BOOLEAN DEFAULT 1

  兼容性：
    - 旧项目自动获得 IPv4 支持
    - 默认值为 true（启用 IPv4）

【代码实现】
  文件修改：
    ✓ internal/database/database.go
    ✓ internal/models/models.go
    ✓ internal/api/projects.go
    ✓ internal/api/template.go
    ✓ web/static/app.js

  核心逻辑：
    if useIPv4 {
        proxyTarget = "127.0.0.1:端口"
    } else {
        proxyTarget = "localhost:端口"
    }

=================================================================
                    常见问题
=================================================================

Q: 为什么我的项目出现 502 错误？
A: 很可能是 Caddy 使用 IPv6 连接，但您的应用只监听 IPv4。
   解决：编辑项目，选择"IPv4"模式。

Q: 旧项目需要重新配置吗？
A: 不需要！
   - 自动添加 IPv4 支持
   - 默认启用 IPv4 模式
   - 如果已经正常工作，无需修改

Q: 什么情况下使用 localhost？
A: 仅在以下情况：
   - 应用明确配置为监听 IPv6
   - 例如 Go 的 http.ListenAndServe("[::]:端口", nil)
   - 或 Node.js 的 app.listen(端口, '::')

Q: 如何让我的应用支持 IPv4 和 IPv6？
A: 取决于编程语言：
   
   Go:
     http.ListenAndServe(":端口", handler)  // 双栈
   
   Node.js:
     app.listen(端口)  // 默认双栈
   
   Python Flask:
     app.run(host='0.0.0.0', port=端口)  // IPv4
     app.run(host='::', port=端口)       // 双栈

Q: 更新后还是 502 怎么办？
A: 检查：
   1. 应用程序是否正在运行
   2. 端口号是否正确
   3. 防火墙是否阻止
   4. 查看 Caddy 日志寻找其他错误

=================================================================
                    完整更新清单
=================================================================

此版本包含之前所有修复 + 新功能：

【之前的修复】
  ✓ Session 超时（7天有效期）
  ✓ 黑框闪烁（双版本编译）
  ✓ 诊断按钮（完整错误处理）
  ✓ Caddy 状态显示（改进检测）
  ✓ SSL 混合内容检测工具

【本次新增】
  ✓ IPv4/IPv6 代理连接方式选择 ⭐
  ✓ 自动数据库迁移
  ✓ 智能 Caddyfile 生成
  ✓ 详细的使用说明和警告提示

=================================================================
                    文件清单
=================================================================

【主程序】
  ✓ caddy-manager-console.exe - 调试版本
  ✓ caddy-manager.exe - 生产版本

【新增文档】
  ✓ IPv4-IPv6兼容性问题.md - 技术文档
  ✓ 本说明文件

【所有工具】
  ✓ 检测SSL问题.bat - SSL 检测
  ✓ 检测混合内容.ps1 - 混合内容检测
  ✓ 开始.bat - 主菜单
  ✓ 启动.bat - 启动脚本

=================================================================
                  验证更新
=================================================================

请按以下步骤验证功能：

[ ] 1. 启动新版本程序
[ ] 2. 登录管理后台
[ ] 3. 新建项目时看到"代理连接方式"选项
[ ] 4. 编辑现有项目能看到该选项
[ ] 5. 保存后 Caddyfile 正确生成
[ ] 6. 502 错误已解决

=================================================================
                    感谢反馈
=================================================================

非常感谢您发现并报告这个 IPv4/IPv6 兼容性问题！

您的反馈帮助我们：
  ✓ 发现了一个影响所有用户的关键问题
  ✓ 实现了更好的解决方案
  ✓ 提升了系统的稳定性

这次更新不仅解决了您的问题，也将帮助所有其他用户
避免相同的困扰。

=================================================================

详细技术文档请参阅：IPv4-IPv6兼容性问题.md

祝使用愉快！🎉
